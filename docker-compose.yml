services:
  postgres:
    image: postgres:15
    container_name: nyc-taxi-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-taxi_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-taxi_2025}
      - POSTGRES_DB=${POSTGRES_DB:-taxi_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-taxi_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  data-loader:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nyc-taxi-data-loader
    volumes:
      - ./data:/app/data
    command: python src/load_raw_data.py

  duckdb-importer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nyc-taxi-duckdb-importer
    volumes:
      - ./data:/app/data
    depends_on:
      data-loader:
        condition: service_completed_successfully
    command: python src/import_to_duckdb.py

  postgres-migrator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nyc-taxi-postgres-migrator
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-taxi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-taxi_2025}
      POSTGRES_DB: ${POSTGRES_DB:-taxi_db}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      duckdb-importer:
        condition: service_completed_successfully
    command: python src/migrate_to_postgres.py

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nyc-taxi-app
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-taxi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-taxi_2025}
      POSTGRES_DB: ${POSTGRES_DB:-taxi_db}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./src:/app/src
    depends_on:
      postgres-migrator:
        condition: service_completed_successfully
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data: